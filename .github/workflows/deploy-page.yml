# Deploy GitHub Pages (Production)
name: Deploy GitHub Pages  # has no effect change with actions/deploy-pages@v4 step

on:
  workflow_run:  # disable this because if active will overwrite staging temporary CNAME file and cannot reach staging website to check. Note after trigger this flow manually staging site CNAME will be overwritten.
    workflows: ["Deploy to Staging"]
    types: [completed]
    branches: [main]
  #  just a trigger that tells GitHub to run deploy-page.yml after those workflows finish. It does not replace branch protection rules. Branch protection is enforced by GitHub, not by workflows.
  #  all your workflows (e.g., test.yml, trivy.yml) do run in parallel, and yes, that's good and professional.
  # workflow_dispatch: {}  # alow manual trigger for workflow run from UI, helpful to give you time to check staging.
  #repository_dispatch: {}  #  Allow the workflow to be triggered externally via API (e.g., from another repo or system using a webhook or GitHub API call).

concurrency:
  group: "prod-deploy-${{ github.ref }}"
  cancel-in-progress: false

permissions:
  actions: read
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  
    #&& github.event_name == 'push' && github.ref == 'refs/heads/main' 
    name: Deploy to GitHub Pages  # appear in this work flow main name run
    runs-on: ubuntu-latest
    #needs: build  # one job and no dependencies
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ./_site  # correct key: path (not source/destination)
      - name: Set Production CNAME
        run: echo "wahba.aiopsvision.com" > _site/CNAME

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./_site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment
      
      - run: echo "Deployed to:${{ steps.deployment.outputs.page_url }}"


    # steps: # only enough with workflow []
    #   - name: Deploy to GitHub Pages # appear under in workflow name
    #     id: deployment
    #     uses: actions/deploy-pages@v4 # in action tab under workflow name pages build and deployment "for all this file" this line tell GitHub actually know where to deploy