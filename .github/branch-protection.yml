name: Setup Branch Protection

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [main]
    paths: ['.github/branch-protection.yml']

jobs:
  setup-branch-protection:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Branch Protection for Main
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.FORCE_PROTECTION }}
          script: |
            const { owner, repo } = context.repo;
            
            try {
              await github.rest.repos.updateBranchProtection({
                owner,
                repo,
                branch: 'main',
                required_status_checks: {
                  strict: true,
                  contexts: ['CI Pipeline']
                },
                enforce_admins: true,
                required_pull_request_reviews: {
                  required_approving_review_count: 2,
                  dismiss_stale_reviews: true,
                  require_code_owner_reviews: true,
                  restrict_dismissals: true,
                  dismissal_restrictions: {
                    users: ['WahbaMousa-DevOps'],
                    teams: []
                  }
                },
                restrictions: {
                  users: ['WahbaMousa-DevOps'],
                  teams: [],
                  apps: []
                },
                allow_force_pushes: false,
                allow_deletions: false,
                required_linear_history: true,
                required_conversation_resolution: true
              });
              
              console.log('Main branch protection updated successfully');
            } catch (error) {
              console.error('Error updating main branch protection:', error);
              throw error;
            }
      
      - name: Setup Branch Protection for Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.FORCE_PROTECTION }}
          script: |
            const { owner, repo } = context.repo;
            
            try {
              await github.rest.repos.updateBranchProtection({
                owner,
                repo,
                branch: 'release',
                required_status_checks: {
                  strict: true,
                  contexts: ['CI Pipeline']
                },
                enforce_admins: false,
                required_pull_request_reviews: {
                  required_approving_review_count: 1,
                  dismiss_stale_reviews: true,
                  require_code_owner_reviews: false
                },
                allow_force_pushes: false,
                allow_deletions: false,
                required_linear_history: true,
                required_conversation_resolution: true
              });
              
              console.log('Release branch protection updated successfully');
            } catch (error) {
              console.error('Error updating release branch protection:', error);
              // Don't fail if release branch doesn't exist yet
              if (error.status !== 404) {
                throw error;
              }
            }